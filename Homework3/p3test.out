Script started on Mon Sep 26 21:37:50 2011
[?1034hbash-3.2$ sbcl
This is SBCL 1.0.51.0-a546163, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* (load "p3.lsp")


; file: /Users/aaron/Desktop/Dropbox/CS/CS580/Homework/Homework3/p3.lsp
; in: DEFUN P3
;     (PROCESS PUZZLE)
; 
; caught STYLE-WARNING:
;   undefined function: PROCESS
; 
; compilation unit finished
;   Undefined function:
;     PROCESS
;   caught 1 STYLE-WARNING condition

; file: /Users/aaron/Desktop/Dropbox/CS/CS580/Homework/Homework3/p3.lsp
; in: DEFUN PROCESS
;     (LET ((FEATURE_LIST (SECOND PUZZLE))
;           (CONSTRAINT_LIST (THIRD PUZZLE))
;           FEAT_NAMES
;           FEAT_VALS
;           PUZZLE_ERROR
;           (FEAT_COL 0))
;       (FORMAT T "~%Puzzle name: ~A" (FIRST PUZZLE))
;       (COND
;        ((EQ (FIRST FEATURE_LIST) 'FEATURES) (SETF *FEATURE_LIST* #)
;         (DOLIST (ITEM *FEATURE_LIST*) (SETF #) (SET # #) (SETF #) (SETF #))
;         (SETF FEAT_NAMES #
;               FEAT_VALS #)
;         (COND (# # #) (T #)))
;        (T (FORMAT T "~%  *** Missing feature list ***"))))
; 
; caught STYLE-WARNING:
;   The variable PUZZLE_ERROR is defined but never used.

; in: DEFUN PROCESS
;     (SETF *FEATURE_LIST* (CDR FEATURE_LIST))
; ==>
;   (SETQ *FEATURE_LIST* (CDR FEATURE_LIST))
; 
; caught WARNING:
;   undefined variable: *FEATURE_LIST*

;     (PROCESS_CONSTRAINTS (CDR CONSTRAINT_LIST) FEAT_VALS)
; 
; caught STYLE-WARNING:
;   undefined function: PROCESS_CONSTRAINTS

;     (SOLVE FEAT_NAMES FEAT_VALS)
; 
; caught STYLE-WARNING:
;   undefined function: SOLVE
; 
; compilation unit finished
;   Undefined functions:
;     PROCESS_CONSTRAINTS SOLVE
;   Undefined variable:
;     *FEATURE_LIST*
;   caught 1 WARNING condition
;   caught 3 STYLE-WARNING conditions

; file: /Users/aaron/Desktop/Dropbox/CS/CS580/Homework/Homework3/p3.lsp
; in: DEFUN PROCESS_CONSTRAINTS
;     (DEFUN PROCESS_CONSTRAINTS (CONSTRAINT_LIST FEAT_VALS)
;       (SETF *CONSTRAINTS* NIL)
;       (FORMAT T "~% Constraints:")
;       (DOLIST (CONSTRAINT CONSTRAINT_LIST)
;         (COND ((EQ # 'IFFN) (SETF #) (FORMAT T "~%   ~A" CONSTRAINT))
;               ((EQ # 'IFF) (FORMAT T "~%   ~A" CONSTRAINT) (COND # # #))
;               (T
;                (FORMAT T "~%   *** Illegal constraint ignored: ~A" CONSTRAINT)))))
; --> PROGN SB-INT:NAMED-LAMBDA 
; ==>
;   #'(SB-INT:NAMED-LAMBDA PROCESS_CONSTRAINTS
;         (CONSTRAINT_LIST FEAT_VALS)
;       (BLOCK PROCESS_CONSTRAINTS
;         (SETF *CONSTRAINTS* NIL)
;         (FORMAT T "~% Constraints:")
;         (DOLIST (CONSTRAINT CONSTRAINT_LIST) (COND (# # #) (# # #) (T #)))))
; 
; caught STYLE-WARNING:
;   The variable FEAT_VALS is defined but never used.

; in: DEFUN PROCESS_CONSTRAINTS
;     (SETF *CONSTRAINTS* NIL)
; ==>
;   (SETQ *CONSTRAINTS* NIL)
; 
; caught WARNING:
;   undefined variable: *CONSTRAINTS*

;     (SETF IFFN_CONSTRAINT
;             (LIST 'IFFN (SECOND CONSTRAINT)
;                   (CONS (FIRST #) (SET-DIFFERENCE # #))))
; ==>
;   (SETQ IFFN_CONSTRAINT
;           (LIST 'IFFN (SECOND CONSTRAINT)
;                 (CONS (FIRST #) (SET-DIFFERENCE # #))))
; 
; caught WARNING:
;   undefined variable: IFFN_CONSTRAINT
; 
; compilation unit finished
;   Undefined variables:
;     *CONSTRAINTS* IFFN_CONSTRAINT
;   caught 2 WARNING conditions
;   caught 1 STYLE-WARNING condition

; in: DEFUN SOLVE
;     (SETF *SOLN_COUNT* 0
;           *NODE_COUNT* 0
;           *PRINT_MAX* 20)
; --> PROGN SETF 
; ==>
;   (SETQ *NODE_COUNT* 0)
; 
; caught WARNING:
;   undefined variable: *NODE_COUNT*

; ==>
;   (SETQ *PRINT_MAX* 20)
; 
; caught WARNING:
;   undefined variable: *PRINT_MAX*

; ==>
;   (SETQ *SOLN_COUNT* 0)
; 
; caught WARNING:
;   undefined variable: *SOLN_COUNT*

;     (GEN_STATES PUZZLE_ARRAY (CAR UNUSED_SYMBOLS) (CDR UNUSED_SYMBOLS) 0 1)
; 
; caught STYLE-WARNING:
;   undefined function: GEN_STATES
; 
; compilation unit finished
;   Undefined function:
;     GEN_STATES
;   Undefined variables:
;     *NODE_COUNT* *PRINT_MAX* *SOLN_COUNT*
;   caught 3 WARNING conditions
;   caught 1 STYLE-WARNING condition

; in: DEFUN GEN_STATES
;     (SETF *NODE_COUNT* (1+ *NODE_COUNT*))
; ==>
;   (SETQ *NODE_COUNT* (1+ *NODE_COUNT*))
; 
; caught WARNING:
;   undefined variable: *NODE_COUNT*

;     (SETQ *SOLN_COUNT* (1+ *SOLN_COUNT*))
; 
; caught WARNING:
;   undefined variable: *SOLN_COUNT*

;     (LEGAL PUZZLE_ARRAY FEAT_ROW FEAT_COL)
; 
; caught STYLE-WARNING:
;   undefined function: LEGAL

;     (PRINT_SOLUTION PUZZLE_ARRAY)
; 
; caught STYLE-WARNING:
;   undefined function: PRINT_SOLUTION
; 
; compilation unit finished
;   Undefined functions:
;     LEGAL PRINT_SOLUTION
;   Undefined variables:
;     *NODE_COUNT* *SOLN_COUNT*
;   caught 2 WARNING conditions
;   caught 2 STYLE-WARNING conditions

; in: DEFUN LEGAL
;     (DOLIST (ITEM *CONSTRAINTS* T)
;       (IF (CHECK_IFFN_MATCH PUZZLE_ARRAY (REST ITEM) FEAT_ROW FEAT_COL)
;           (RETURN NIL)))
; --> BLOCK 
; ==>
;   (LET ((#:N-LIST0 *CONSTRAINTS*))
;     (TAGBODY
;      #:START1
;       (UNLESS (ENDP #:N-LIST0)
;         (LET* (#)
;           (SETQ #)
;           (TAGBODY #))
;         (GO #:START1))))
; 
; caught WARNING:
;   undefined variable: *CONSTRAINTS*

;     (CHECK_IFFN_MATCH PUZZLE_ARRAY (REST ITEM) FEAT_ROW FEAT_COL)
; 
; caught STYLE-WARNING:
;   undefined function: CHECK_IFFN_MATCH
; 
; compilation unit finished
;   Undefined function:
;     CHECK_IFFN_MATCH
;   Undefined variable:
;     *CONSTRAINTS*
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition

; in: DEFUN PRINT_SOLUTION
;     (< *SOLN_COUNT* *PRINT_MAX*)
; 
; caught WARNING:
;   undefined variable: *PRINT_MAX*
; 
; caught WARNING:
;   undefined variable: *SOLN_COUNT*
; 
; compilation unit finished
;   Undefined variables:
;     *PRINT_MAX* *SOLN_COUNT*
;   caught 2 WARNING conditions

T
* (p3)

Puzzle name: WIDGETS
 Constraints:
   (IFFN (COLOR RED BLUE) (NAME WID2))
   (IFF (NAME WID3) (COLOR RED))
      Converted: (IFFN (NAME WID3) (COLOR BLUE GREEN))
 Solving a 3 object 2 feature problem:
  Feature names: (NAME COLOR)
  Feature values: ((WID1 WID2 WID3) (RED GREEN BLUE))
  Solutions:
     #2A((WID1 BLUE) (WID2 GREEN) (WID3 RED))
  Solution count: 1, Node count: 6

Puzzle name: WIDGETS
 Constraints:
   (IFFN (COLOR BLUE) (NAME WID1 WID2))
   (IFF (NAME WID2 WID3) (SHAPE ROUND))
      Converted: (IFFN (SHAPE ROUND) (NAME WID1))
 Solving a 3 object 3 feature problem:
  Feature names: (NAME COLOR SHAPE)
  Feature values: ((WID1 WID2 WID3) (RED GREEN BLUE) (ROUND SQUARE TRIANGULAR))
  Solutions:
     #2A((WID1 RED SQUARE) (WID2 GREEN ROUND) (WID3 BLUE TRIANGULAR))
     #2A((WID1 RED SQUARE) (WID2 GREEN TRIANGULAR) (WID3 BLUE ROUND))
     #2A((WID1 RED TRIANGULAR) (WID2 GREEN ROUND) (WID3 BLUE SQUARE))
     #2A((WID1 RED TRIANGULAR) (WID2 GREEN SQUARE) (WID3 BLUE ROUND))
     #2A((WID1 GREEN SQUARE) (WID2 RED ROUND) (WID3 BLUE TRIANGULAR))
     #2A((WID1 GREEN SQUARE) (WID2 RED TRIANGULAR) (WID3 BLUE ROUND))
     #2A((WID1 GREEN TRIANGULAR) (WID2 RED ROUND) (WID3 BLUE SQUARE))
     #2A((WID1 GREEN TRIANGULAR) (WID2 RED SQUARE) (WID3 BLUE ROUND))
  Solution count: 8, Node count: 26
***ALL_DONE***
* (quit)
bash-3.2$ exit

Script done on Mon Sep 26 21:38:34 2011
